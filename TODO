Roadmap (tasks listed in decreasing priority)

* improve API documentation of existing code
* Add some more useful rules
* Make error/warning know which rule has caused them
* Make token know in which namespace/class/function it is
* Allow adding custom rules (by specifying additional Rule directories)
* Make phpca configurable (see sample phpca.ini for a collection of ideas)
* Add XML output to comply with phpcs for ci integration
* Port "interesting" rules from phpcs
* write a source code highlighter that highlights violations in the source code and attaches the error message as popup

Rules to add (in no particular order, just a collection of ideas)

* no shutup operator
* No inline if
* Correct indentation
* no trailing whitespace
* no elseif (warning?)
* no brackets around return value
* no deprecated PHPDoc tags (@access, ...)
* one blank after comma in argument lists
* no alternative control structures like if ... endif etc.
* consistently use echo or print
* no output (echo, print) in certain classes/directories
* test method has @covers tag
* all thrown exceptions are documented in docblocks
* all parameters are documented in docblocks
* there is a @return in every docblock, @return void or @return null
* type hints and docblock parameter types match
* test method must either have at least one assertion or @expects annotation
